"""Initial migration

Revision ID: f99d7a6d0f0d
Revises: 
Create Date: 2025-09-05 16:06:03.940561

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f99d7a6d0f0d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('youtube_query', sa.String(), nullable=True),
    sa.Column('duration_weeks', sa.Integer(), nullable=False),
    sa.Column('task_type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_id')
    )
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('universities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('kana_name', sa.String(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('info_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('grade', sa.String(), nullable=False),
    sa.Column('school', sa.String(), nullable=False),
    sa.Column('faculty', sa.String(), nullable=False),
    sa.Column('plan_type', sa.String(), nullable=False),
    sa.Column('course_type', sa.String(), nullable=True),
    sa.Column('prefecture', sa.String(), nullable=True),
    sa.Column('target_exam_date', sa.Date(), nullable=True),
    sa.Column('starting_level', sa.Integer(), nullable=False),
    sa.Column('learning_style', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('faculties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.String(), nullable=False),
    sa.Column('is_completed', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('routes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('plan_type', sa.String(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('study_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subject_strategies',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('strategy_html', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('subject_id')
    )
    op.create_table('user_continuous_task_selections',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('selected_task_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'subject_id', 'level', 'category')
    )
    op.create_table('user_hidden_tasks',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'task_id')
    )
    op.create_table('user_sequential_task_selections',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.String(), nullable=False),
    sa.Column('selected_task_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('user_subject_levels',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('start_level', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'subject_id')
    )
    op.create_table('user_subjects',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'subject_id')
    )
    op.create_table('weaknesses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('route_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('step_order', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('is_main', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
     # ▼▼▼ この部分を追加 ▼▼▼
    # subjectsテーブルに初期データを投入
    subjects_table = sa.table('subjects',
        sa.column('id', sa.Integer),
        sa.column('name', sa.String)
    )
    op.bulk_insert(subjects_table,
        [
            {'name': '英語'},
            {'name': '数学'},
            
        ]
    )
    # ▲▲▲ ここまで追加 ▲▲▲

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('route_steps')
    op.drop_table('weaknesses')
    op.drop_table('user_subjects')
    op.drop_table('user_subject_levels')
    op.drop_table('user_sequential_task_selections')
    op.drop_table('user_hidden_tasks')
    op.drop_table('user_continuous_task_selections')
    op.drop_table('subject_strategies')
    op.drop_table('study_logs')
    op.drop_table('routes')
    op.drop_table('progress')
    op.drop_table('faculties')
    op.drop_table('users')
    op.drop_table('universities')
    op.drop_table('subjects')
    op.drop_table('books')
    # ### end Alembic commands ###
